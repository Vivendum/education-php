<?php
  print '----==== 1 ====----' . PHP_EOL;
  print 'Научился выполнять алгоритм указынный в файл.php в консоли с помощью REPL - для этого нужно в командой строке указать php файл.php' . PHP_EOL;
  print PHP_EOL;
  print '----==== 2 ====----' . PHP_EOL;
  print 'Узнал как переносить строку с помощью предопределённой в языке константы PHP_EOL' . PHP_EOL;
  print 'PHP_EOL ставит \n, если это ОС Linux или \r\n, если это Windows' . PHP_EOL;
  print PHP_EOL;
  print '----==== 3 ====----' . PHP_EOL;
  print 'Конструкция языка print — выводит только ОДНУ строку.' . PHP_EOL;
  print PHP_EOL;
  print 'Для вывода строки можно использовать синтаксис типа функции: print(\'текст\');' . PHP_EOL;
  print 'Так как print — это именно конструкция, а не функция, то () скобки можно опустить: print \'текст\';' . PHP_EOL;
  print PHP_EOL;
  print 'Что бы вывести многострочную строку можно использовать переводы на новую строку с помощью клавиши Enter.
REPL — командная оболочка PHP:
Read  — ожидание ввода от пользователя;
Eval  — выполненние введённого кода;
Print — вывод результата на экран;
Loop  — ожидание.' . PHP_EOL;
  print PHP_EOL;
  print 'В текст строки можно вставлять \n или любой другой зарезервированный языком код — всё будет отображено.' . PHP_EOL;
  print PHP_EOL;
  print 'Экранирование символов делается с помощью символа \ обратного слеша.' . PHP_EOL;
  print PHP_EOL;
  $variable_text_1 = '\'текст\'';
  $variable_text_2 = "\"текст\"";
  $variable_number_1 = 12345;
  $variable_array = array(1, 2, 3, 4, 5);
  print "Языковая конструкция print может выводить значение переменных:
значение текстовой переменной 1 — $variable_text_1;
значение текстовой переменной 2 — $variable_text_2;
значение числовой переменной 1 — $variable_number_1;
значение переменной с массивом [1 2 3 4 5], с индексом 2 — {$variable_array[2]}.
Только код такой строки нужно оборачивать в \" двойные кавычки, иначе все символы будут отображены как текст." . PHP_EOL;
  print PHP_EOL;
  print 'Если не используются другие сиволы, то переменные можно выводить сразу: print $variable;' . PHP_EOL;
  print $variable_text_1 . PHP_EOL;
  print $variable_text_2 . PHP_EOL;
  print $variable_number_1 . PHP_EOL;
  print $variable_array[2] . PHP_EOL;
  print PHP_EOL;
  print '----==== 4 ====----' . PHP_EOL;
  echo
    'Конструкция языка echo — выводит одну и более строк.', PHP_EOL,
    'Аргументы нужно перечислять через запятую: echo \'текст\', \'текст\';', PHP_EOL,
    'Так как echo это языковая конструкция, а не функция то () скобки ОБЯЗАТЕЛЬНО нужно опустить: echo (\'текст\', \'текст\'); — НЕ РАБОТАЕТ!', PHP_EOL;
  print PHP_EOL;
  echo
    'Пример 1', PHP_EOL,
    'Первый аргумент: аргументы echo заключённы в \' кавычки.',
    '\n',
    'Третий аргумент: строка после \n.',
    'PHP_EOL',
    'Пятый аргумент: строка после PHP_EOL.',
    PHP_EOL,
    'Седьмой аргумент: строка после PHP_EOL без \' одинарных кавычек.', PHP_EOL,
    'Восьмой аргумент — вывод переменных: $variable_text_1, $variable_text_2, $variable_number_1, {$variable_array[2]}.', PHP_EOL;
  print PHP_EOL;
  echo
    'Пример 2', PHP_EOL,
    "Первый аргумент: аргументы echo заключены в \" кавычки.",
    "\n",
    "Третий аргумент: строка после \\n.",
    "PHP_EOL",
    "Пятый аргумент: строка после PHP_EOL.",
    PHP_EOL,
    "Седьмой аргумент: строка после PHP_EOL без \" двойных кавычек.", PHP_EOL,
    "Восьмой аргумент — вывод переменных: $variable_text_1, $variable_text_2, $variable_number_1, {$variable_array[2]}.", PHP_EOL;
  print PHP_EOL;
?>
